import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from "react";
import axios from "axios";
import { useRouter } from "next/router";


type Movie = {
  Title: string;
  Year: string;
  imdbID: string;
  Type: string;
  Poster: string;
};

type SearchResponse = {
  Search: Movie[];
};

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [searchQuery, setSearchQuery] = useState("");
  const [movies, setMovies] = useState<Movie[]>([]);
  const [searchError, setSearchError] = useState("");
  

  const handleSearchInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setSearchQuery(event.target.value);
  };

  const router = useRouter();
  
  // console.log(router);

  const handleClick = (movieId: string) => {
  router.push(`${movieId}`);
};

  
 const handleSearch = async () => {
   if (!searchQuery.trim()) return;

    const response = await axios.get<SearchResponse>(
      `http://www.omdbapi.com/?s=${searchQuery}&apikey=${process.env.NEXT_PUBLIC_OMDB_API_KEY}`
    );
   
   console.log(response);
   
   if (response.data?.Search) {
    const moviesWithIds = response.data.Search.map((movie) => ({
      ...movie,
      imdbID: movie.imdbID,
    }));
    setMovies(moviesWithIds);
    setSearchError("");
  } else {
      setMovies([]);
      setSearchError("No results found. Please try a different search query.");
    }
  };

  return (
    <>
      <Head>
        <title>Movie Search NextJS App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
       <div>
      <h1>Movie Search App</h1>

      <div>
        <input type="text" value={searchQuery} onChange={handleSearchInputChange} />
        <button onClick={handleSearch}>Search</button>
      </div>

      <div>
        {searchError ? (
          <p>{searchError}</p>
        ) : (
          movies.map((movie) => (
            <div key={movie.imdbID} onClick={() => handleClick(movie.imdbID)}>
              <img src={movie.Poster} alt={movie.Title} />
              <p>{movie.Title}</p>
              <p>{movie.Year}</p>
              <p>{movie.Type}</p>
            </div>
          ))
        )}
      </div>
    </div>
      </main>
    </>
  )
}
